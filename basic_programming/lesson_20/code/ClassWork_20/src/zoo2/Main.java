package zoo2;

public class Main {
    public static void main(String[] args) {
        // Восходящее приведение (Upcasting)
        Dog dog = new Dog(); // Создаем объект типа Dog
        Animal animal = dog; // Восходящее приведение, объект типа Dog становится объектом типа Animal

        // Вызываем методы суперкласса Animal
        animal.makeSound(); // Выведет: Звук животного

        // Нисходящее приведение (Downcasting)
        Animal animal2 = new Cat(); // Создаем объект типа Cat и приводим его к типу Animal

        // В этой части кода мы начнем использовать нисходящее приведение,
        // чтобы вернуться к типам Dog и Cat.

        // Это потенциально опасно, так как animal2 на самом деле содержит объект типа Cat,
        // и нельзя быть уверенным, что он может быть безопасно приведен к типу Dog.
        // Мы должны проверить, является ли он экземпляром Dog, прежде чем выполнять нисходящее приведение.
        if (animal2 instanceof Dog) {
            Dog anotherDog = (Dog) animal2; // Нисходящее приведение

            // Теперь мы можем вызвать метод makeSound() специфичный для Dog.
            // Обратите внимание, что makeSound() переопределен в классе Dog.
            anotherDog.makeSound(); // Выведет: Гав-гав!
        } else {
            System.out.println("Этот объект не является экземпляром Dog.");
        }

        // Попробуем еще одно нисходящее приведение
        // В этом случае, объект animal2 на самом деле является экземпляром Cat,
        // и мы безопасно можем привести его к типу Cat.
        if (animal2 instanceof Cat) {
            Cat cat = (Cat) animal2; // Нисходящее приведение

            // Теперь мы можем вызвать метод makeSound() специфичный для Cat.
            // Обратите внимание, что makeSound() переопределен в классе Cat.
            cat.makeSound(); // Выведет: Мяу-мяу!
        } else {
            System.out.println("Этот объект не является экземпляром Cat.");
        }
    }
}
